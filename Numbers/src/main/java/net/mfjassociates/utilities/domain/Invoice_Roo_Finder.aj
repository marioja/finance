// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package net.mfjassociates.utilities.domain;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import net.mfjassociates.utilities.domain.Invoice;

privileged aspect Invoice_Roo_Finder {
    
    public static Long Invoice.countFindInvoicesByHandleEquals(String handle) {
        if (handle == null || handle.length() == 0) throw new IllegalArgumentException("The handle argument is required");
        EntityManager em = Invoice.entityManager();
        TypedQuery q = em.createQuery("SELECT COUNT(o) FROM Invoice AS o WHERE o.handle = :handle", Long.class);
        q.setParameter("handle", handle);
        return ((Long) q.getSingleResult());
    }
    
    public static TypedQuery<Invoice> Invoice.findInvoicesByHandleEquals(String handle) {
        if (handle == null || handle.length() == 0) throw new IllegalArgumentException("The handle argument is required");
        EntityManager em = Invoice.entityManager();
        TypedQuery<Invoice> q = em.createQuery("SELECT o FROM Invoice AS o WHERE o.handle = :handle", Invoice.class);
        q.setParameter("handle", handle);
        return q;
    }
    
    public static TypedQuery<Invoice> Invoice.findInvoicesByHandleEquals(String handle, String sortFieldName, String sortOrder) {
        if (handle == null || handle.length() == 0) throw new IllegalArgumentException("The handle argument is required");
        EntityManager em = Invoice.entityManager();
        String jpaQuery = "SELECT o FROM Invoice AS o WHERE o.handle = :handle";
        if (fieldNames4OrderClauseFilter.contains(sortFieldName)) {
            jpaQuery = jpaQuery + " ORDER BY " + sortFieldName;
            if ("ASC".equalsIgnoreCase(sortOrder) || "DESC".equalsIgnoreCase(sortOrder)) {
                jpaQuery = jpaQuery + " " + sortOrder;
            }
        }
        TypedQuery<Invoice> q = em.createQuery(jpaQuery, Invoice.class);
        q.setParameter("handle", handle);
        return q;
    }
    
}
